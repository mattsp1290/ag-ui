# golangci-lint configuration for ag-ui Go SDK
# This configuration provides comprehensive Go code quality checks

run:
  timeout: 10m
  issues-exit-code: 1
  tests: true
  modules-download-mode: readonly
  allow-parallel-runners: true
  go: '1.24'

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters-settings:
  # Cyclomatic complexity
  cyclop:
    max-complexity: 15
    package-average: 10.0
    skip-tests: true

  # Duplicate code detection
  dupl:
    threshold: 100

  # Error handling
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - io/ioutil.ReadFile
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)

  # Security
  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G104 # Audit errors not checked
      - G204 # Subprocess launched with variable
    config:
      G301: "0600"
      G302: "0600"
      G306: "0600"

  # Imports
  goimports:
    local-prefixes: github.com/ag-ui/go-sdk

  # Line length
  lll:
    line-length: 120
    tab-width: 4

  # Naming conventions
  revive:
    severity: warning
    confidence: 0.8
    rules:
      - name: atomic
      - name: blank-imports
      - name: bool-literal-in-expr
      - name: confusing-naming
      - name: constant-logical-expr
      - name: context-as-argument
      - name: context-keys-type
      - name: deep-exit
      - name: defer
      - name: dot-imports
      - name: duplicated-imports
      - name: early-return
      - name: empty-block
      - name: empty-lines
      - name: error-naming
      - name: error-return
      - name: error-strings
      - name: errorf
      - name: exported
      - name: flag-parameter
      - name: function-result-limit
        arguments: [3]
      - name: get-return
      - name: identical-branches
      - name: if-return
      - name: increment-decrement
      - name: indent-error-flow
      - name: max-public-structs
        arguments: [5]
      - name: modifies-parameter
      - name: modifies-value-receiver
      - name: package-comments
      - name: range
      - name: range-val-in-closure
      - name: range-val-address
      - name: receiver-naming
      - name: redefines-builtin-id
      - name: string-of-int
      - name: superfluous-else
      - name: time-naming
      - name: unconditional-recursion
      - name: unexported-naming
      - name: unexported-return
      - name: unhandled-error
      - name: unnecessary-stmt
      - name: unreachable-code
      - name: unused-parameter
      - name: unused-receiver
      - name: use-any
      - name: useless-break
      - name: var-declaration
      - name: var-naming
      - name: waitgroup-by-value

  # Cognitive complexity
  gocognit:
    min-complexity: 15

  # Function length
  funlen:
    lines: 100
    statements: 50

  # Maintainability index
  maintidx:
    under: 20

  # Nested if statements
  nestif:
    min-complexity: 5

  # Unused code
  unused:
    field-writes-are-uses: true
    post-statements-are-reads: true
    exported-fields-are-used: true
    parameters-are-used: true
    local-variables-are-used: true
    generated-is-used: true

  # Whitespace
  wsl:
    strict-append: true
    allow-assign-and-call: true
    allow-assign-and-anything: false
    allow-multiline-assign: true
    force-case-trailing-whitespace: 0
    force-err-cuddling: false
    allow-separated-leading-comment: false
    force-short-decl-cuddling: false
    allow-cuddle-declarations: false
    allow-trailing-comment: false

  # Govet
  govet:
    check-shadowing: true
    enable-all: true
    disable:
      - fieldalignment # Can be too noisy
      - shadow # Handled by separate linter

  # Staticcheck
  staticcheck:
    go: "1.24"
    checks: ["all"]

linters:
  disable-all: true
  enable:
    # Enabled by default
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - unused

    # Additional quality linters
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - cyclop
    - dupl
    - durationcheck
    - errname
    - errorlint
    - execinquery
    - exportloopref
    - forbidigo
    - funlen
    - gochecknoinits
    - gochecknoglobals
    - gocognit
    - goconst
    - gocritic
    - godot
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomodguard
    - goprintffuncname
    - gosec
    - grouper
    - importas
    - interfacebloat
    - lll
    - maintidx
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tenv
    - testableexamples
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - usestdlibvars
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl

issues:
  # Exclude common false positives
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - gomnd
        - goconst
        - funlen
        - gocognit
        - maintidx
        - wrapcheck
        - noctx

    # Exclude some linters from running on generated files
    - path: \.pb\.go
      linters:
        - revive
        - stylecheck
        - gofmt
        - goimports
        - lll
        - unused
        - govet

    # Exclude some linters from running on examples
    - path: examples/
      linters:
        - errcheck
        - gosec
        - wrapcheck
        - noctx
        - gomnd

    # Exclude some linters from running on main.go files
    - path: main\.go
      linters:
        - gochecknoinits
        - gochecknoglobals
        - wrapcheck

    # Exclude some linters from running on internal packages
    - path: internal/
      linters:
        - revive
        - stylecheck

    # Exclude specific rules that are too noisy
    - text: "should not use dot imports"
      linters:
        - revive
    - text: "package comment should be of the form"
      linters:
        - revive
    - text: "ST1000:"
      linters:
        - stylecheck

  # Show only new issues
  new-from-rev: HEAD~1

  # Maximum issues count per one linter
  max-issues-per-linter: 50

  # Maximum count of issues with the same text
  max-same-issues: 10

  # Fix issues automatically where possible
  fix: true

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - revive
        - stylecheck
        - golint
      severity: warning
    - linters:
        - gosec
        - errcheck
      severity: error