// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: events.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_TEXT_MESSAGE_START   EventType = 0
	EventType_TEXT_MESSAGE_CONTENT EventType = 1
	EventType_TEXT_MESSAGE_END     EventType = 2
	EventType_TOOL_CALL_START      EventType = 3
	EventType_TOOL_CALL_ARGS       EventType = 4
	EventType_TOOL_CALL_END        EventType = 5
	EventType_STATE_SNAPSHOT       EventType = 6
	EventType_STATE_DELTA          EventType = 7
	EventType_MESSAGES_SNAPSHOT    EventType = 8
	EventType_RAW                  EventType = 9
	EventType_CUSTOM               EventType = 10
	EventType_RUN_STARTED          EventType = 11
	EventType_RUN_FINISHED         EventType = 12
	EventType_RUN_ERROR            EventType = 13
	EventType_STEP_STARTED         EventType = 14
	EventType_STEP_FINISHED        EventType = 15
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "TEXT_MESSAGE_START",
		1:  "TEXT_MESSAGE_CONTENT",
		2:  "TEXT_MESSAGE_END",
		3:  "TOOL_CALL_START",
		4:  "TOOL_CALL_ARGS",
		5:  "TOOL_CALL_END",
		6:  "STATE_SNAPSHOT",
		7:  "STATE_DELTA",
		8:  "MESSAGES_SNAPSHOT",
		9:  "RAW",
		10: "CUSTOM",
		11: "RUN_STARTED",
		12: "RUN_FINISHED",
		13: "RUN_ERROR",
		14: "STEP_STARTED",
		15: "STEP_FINISHED",
	}
	EventType_value = map[string]int32{
		"TEXT_MESSAGE_START":   0,
		"TEXT_MESSAGE_CONTENT": 1,
		"TEXT_MESSAGE_END":     2,
		"TOOL_CALL_START":      3,
		"TOOL_CALL_ARGS":       4,
		"TOOL_CALL_END":        5,
		"STATE_SNAPSHOT":       6,
		"STATE_DELTA":          7,
		"MESSAGES_SNAPSHOT":    8,
		"RAW":                  9,
		"CUSTOM":               10,
		"RUN_STARTED":          11,
		"RUN_FINISHED":         12,
		"RUN_ERROR":            13,
		"STEP_STARTED":         14,
		"STEP_FINISHED":        15,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_events_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_events_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{0}
}

type BaseEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          EventType              `protobuf:"varint,1,opt,name=type,proto3,enum=ag_ui.EventType" json:"type,omitempty"`
	Timestamp     *int64                 `protobuf:"varint,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	RawEvent      *structpb.Value        `protobuf:"bytes,3,opt,name=raw_event,json=rawEvent,proto3,oneof" json:"raw_event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseEvent) Reset() {
	*x = BaseEvent{}
	mi := &file_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseEvent) ProtoMessage() {}

func (x *BaseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseEvent.ProtoReflect.Descriptor instead.
func (*BaseEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{0}
}

func (x *BaseEvent) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_TEXT_MESSAGE_START
}

func (x *BaseEvent) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *BaseEvent) GetRawEvent() *structpb.Value {
	if x != nil {
		return x.RawEvent
	}
	return nil
}

type TextMessageStartEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Role          *string                `protobuf:"bytes,3,opt,name=role,proto3,oneof" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextMessageStartEvent) Reset() {
	*x = TextMessageStartEvent{}
	mi := &file_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextMessageStartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessageStartEvent) ProtoMessage() {}

func (x *TextMessageStartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessageStartEvent.ProtoReflect.Descriptor instead.
func (*TextMessageStartEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{1}
}

func (x *TextMessageStartEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *TextMessageStartEvent) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *TextMessageStartEvent) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

type TextMessageContentEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Delta         string                 `protobuf:"bytes,3,opt,name=delta,proto3" json:"delta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextMessageContentEvent) Reset() {
	*x = TextMessageContentEvent{}
	mi := &file_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextMessageContentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessageContentEvent) ProtoMessage() {}

func (x *TextMessageContentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessageContentEvent.ProtoReflect.Descriptor instead.
func (*TextMessageContentEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{2}
}

func (x *TextMessageContentEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *TextMessageContentEvent) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *TextMessageContentEvent) GetDelta() string {
	if x != nil {
		return x.Delta
	}
	return ""
}

type TextMessageEndEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextMessageEndEvent) Reset() {
	*x = TextMessageEndEvent{}
	mi := &file_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextMessageEndEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessageEndEvent) ProtoMessage() {}

func (x *TextMessageEndEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessageEndEvent.ProtoReflect.Descriptor instead.
func (*TextMessageEndEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{3}
}

func (x *TextMessageEndEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *TextMessageEndEvent) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type ToolCallStartEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent       *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	ToolCallId      string                 `protobuf:"bytes,2,opt,name=tool_call_id,json=toolCallId,proto3" json:"tool_call_id,omitempty"`
	ToolCallName    string                 `protobuf:"bytes,3,opt,name=tool_call_name,json=toolCallName,proto3" json:"tool_call_name,omitempty"`
	ParentMessageId *string                `protobuf:"bytes,4,opt,name=parent_message_id,json=parentMessageId,proto3,oneof" json:"parent_message_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ToolCallStartEvent) Reset() {
	*x = ToolCallStartEvent{}
	mi := &file_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolCallStartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCallStartEvent) ProtoMessage() {}

func (x *ToolCallStartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCallStartEvent.ProtoReflect.Descriptor instead.
func (*ToolCallStartEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{4}
}

func (x *ToolCallStartEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *ToolCallStartEvent) GetToolCallId() string {
	if x != nil {
		return x.ToolCallId
	}
	return ""
}

func (x *ToolCallStartEvent) GetToolCallName() string {
	if x != nil {
		return x.ToolCallName
	}
	return ""
}

func (x *ToolCallStartEvent) GetParentMessageId() string {
	if x != nil && x.ParentMessageId != nil {
		return *x.ParentMessageId
	}
	return ""
}

type ToolCallArgsEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	ToolCallId    string                 `protobuf:"bytes,2,opt,name=tool_call_id,json=toolCallId,proto3" json:"tool_call_id,omitempty"`
	Delta         string                 `protobuf:"bytes,3,opt,name=delta,proto3" json:"delta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolCallArgsEvent) Reset() {
	*x = ToolCallArgsEvent{}
	mi := &file_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolCallArgsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCallArgsEvent) ProtoMessage() {}

func (x *ToolCallArgsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCallArgsEvent.ProtoReflect.Descriptor instead.
func (*ToolCallArgsEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{5}
}

func (x *ToolCallArgsEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *ToolCallArgsEvent) GetToolCallId() string {
	if x != nil {
		return x.ToolCallId
	}
	return ""
}

func (x *ToolCallArgsEvent) GetDelta() string {
	if x != nil {
		return x.Delta
	}
	return ""
}

type ToolCallEndEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	ToolCallId    string                 `protobuf:"bytes,2,opt,name=tool_call_id,json=toolCallId,proto3" json:"tool_call_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolCallEndEvent) Reset() {
	*x = ToolCallEndEvent{}
	mi := &file_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolCallEndEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCallEndEvent) ProtoMessage() {}

func (x *ToolCallEndEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCallEndEvent.ProtoReflect.Descriptor instead.
func (*ToolCallEndEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{6}
}

func (x *ToolCallEndEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *ToolCallEndEvent) GetToolCallId() string {
	if x != nil {
		return x.ToolCallId
	}
	return ""
}

type StateSnapshotEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	Snapshot      *structpb.Value        `protobuf:"bytes,2,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateSnapshotEvent) Reset() {
	*x = StateSnapshotEvent{}
	mi := &file_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateSnapshotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSnapshotEvent) ProtoMessage() {}

func (x *StateSnapshotEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSnapshotEvent.ProtoReflect.Descriptor instead.
func (*StateSnapshotEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{7}
}

func (x *StateSnapshotEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *StateSnapshotEvent) GetSnapshot() *structpb.Value {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type StateDeltaEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	Delta         []*JsonPatchOperation  `protobuf:"bytes,2,rep,name=delta,proto3" json:"delta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateDeltaEvent) Reset() {
	*x = StateDeltaEvent{}
	mi := &file_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateDeltaEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDeltaEvent) ProtoMessage() {}

func (x *StateDeltaEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDeltaEvent.ProtoReflect.Descriptor instead.
func (*StateDeltaEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{8}
}

func (x *StateDeltaEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *StateDeltaEvent) GetDelta() []*JsonPatchOperation {
	if x != nil {
		return x.Delta
	}
	return nil
}

type MessagesSnapshotEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	Messages      []*Message             `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagesSnapshotEvent) Reset() {
	*x = MessagesSnapshotEvent{}
	mi := &file_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagesSnapshotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagesSnapshotEvent) ProtoMessage() {}

func (x *MessagesSnapshotEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagesSnapshotEvent.ProtoReflect.Descriptor instead.
func (*MessagesSnapshotEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{9}
}

func (x *MessagesSnapshotEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *MessagesSnapshotEvent) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type RawEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	Event         *structpb.Value        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Source        *string                `protobuf:"bytes,3,opt,name=source,proto3,oneof" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawEvent) Reset() {
	*x = RawEvent{}
	mi := &file_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawEvent) ProtoMessage() {}

func (x *RawEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawEvent.ProtoReflect.Descriptor instead.
func (*RawEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{10}
}

func (x *RawEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *RawEvent) GetEvent() *structpb.Value {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RawEvent) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

type CustomEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value         *structpb.Value        `protobuf:"bytes,3,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomEvent) Reset() {
	*x = CustomEvent{}
	mi := &file_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomEvent) ProtoMessage() {}

func (x *CustomEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomEvent.ProtoReflect.Descriptor instead.
func (*CustomEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{11}
}

func (x *CustomEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *CustomEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomEvent) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type RunStartedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	ThreadId      string                 `protobuf:"bytes,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	RunId         string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunStartedEvent) Reset() {
	*x = RunStartedEvent{}
	mi := &file_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunStartedEvent) ProtoMessage() {}

func (x *RunStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunStartedEvent.ProtoReflect.Descriptor instead.
func (*RunStartedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{12}
}

func (x *RunStartedEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *RunStartedEvent) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *RunStartedEvent) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type RunFinishedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	ThreadId      string                 `protobuf:"bytes,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	RunId         string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunFinishedEvent) Reset() {
	*x = RunFinishedEvent{}
	mi := &file_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunFinishedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunFinishedEvent) ProtoMessage() {}

func (x *RunFinishedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunFinishedEvent.ProtoReflect.Descriptor instead.
func (*RunFinishedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{13}
}

func (x *RunFinishedEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *RunFinishedEvent) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *RunFinishedEvent) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type RunErrorEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	Code          *string                `protobuf:"bytes,2,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunErrorEvent) Reset() {
	*x = RunErrorEvent{}
	mi := &file_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunErrorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunErrorEvent) ProtoMessage() {}

func (x *RunErrorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunErrorEvent.ProtoReflect.Descriptor instead.
func (*RunErrorEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{14}
}

func (x *RunErrorEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *RunErrorEvent) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *RunErrorEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StepStartedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	StepName      string                 `protobuf:"bytes,2,opt,name=step_name,json=stepName,proto3" json:"step_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepStartedEvent) Reset() {
	*x = StepStartedEvent{}
	mi := &file_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepStartedEvent) ProtoMessage() {}

func (x *StepStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepStartedEvent.ProtoReflect.Descriptor instead.
func (*StepStartedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{15}
}

func (x *StepStartedEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *StepStartedEvent) GetStepName() string {
	if x != nil {
		return x.StepName
	}
	return ""
}

type StepFinishedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	StepName      string                 `protobuf:"bytes,2,opt,name=step_name,json=stepName,proto3" json:"step_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepFinishedEvent) Reset() {
	*x = StepFinishedEvent{}
	mi := &file_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepFinishedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepFinishedEvent) ProtoMessage() {}

func (x *StepFinishedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepFinishedEvent.ProtoReflect.Descriptor instead.
func (*StepFinishedEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{16}
}

func (x *StepFinishedEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *StepFinishedEvent) GetStepName() string {
	if x != nil {
		return x.StepName
	}
	return ""
}

type TextMessageChunkEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent     *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	MessageId     *string                `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3,oneof" json:"message_id,omitempty"`
	Role          *string                `protobuf:"bytes,3,opt,name=role,proto3,oneof" json:"role,omitempty"`
	Delta         *string                `protobuf:"bytes,4,opt,name=delta,proto3,oneof" json:"delta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextMessageChunkEvent) Reset() {
	*x = TextMessageChunkEvent{}
	mi := &file_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextMessageChunkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextMessageChunkEvent) ProtoMessage() {}

func (x *TextMessageChunkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextMessageChunkEvent.ProtoReflect.Descriptor instead.
func (*TextMessageChunkEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{17}
}

func (x *TextMessageChunkEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *TextMessageChunkEvent) GetMessageId() string {
	if x != nil && x.MessageId != nil {
		return *x.MessageId
	}
	return ""
}

func (x *TextMessageChunkEvent) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *TextMessageChunkEvent) GetDelta() string {
	if x != nil && x.Delta != nil {
		return *x.Delta
	}
	return ""
}

type ToolCallChunkEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseEvent       *BaseEvent             `protobuf:"bytes,1,opt,name=base_event,json=baseEvent,proto3" json:"base_event,omitempty"`
	ToolCallId      *string                `protobuf:"bytes,2,opt,name=tool_call_id,json=toolCallId,proto3,oneof" json:"tool_call_id,omitempty"`
	ToolCallName    *string                `protobuf:"bytes,3,opt,name=tool_call_name,json=toolCallName,proto3,oneof" json:"tool_call_name,omitempty"`
	ParentMessageId *string                `protobuf:"bytes,4,opt,name=parent_message_id,json=parentMessageId,proto3,oneof" json:"parent_message_id,omitempty"`
	Delta           *string                `protobuf:"bytes,5,opt,name=delta,proto3,oneof" json:"delta,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ToolCallChunkEvent) Reset() {
	*x = ToolCallChunkEvent{}
	mi := &file_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolCallChunkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCallChunkEvent) ProtoMessage() {}

func (x *ToolCallChunkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCallChunkEvent.ProtoReflect.Descriptor instead.
func (*ToolCallChunkEvent) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{18}
}

func (x *ToolCallChunkEvent) GetBaseEvent() *BaseEvent {
	if x != nil {
		return x.BaseEvent
	}
	return nil
}

func (x *ToolCallChunkEvent) GetToolCallId() string {
	if x != nil && x.ToolCallId != nil {
		return *x.ToolCallId
	}
	return ""
}

func (x *ToolCallChunkEvent) GetToolCallName() string {
	if x != nil && x.ToolCallName != nil {
		return *x.ToolCallName
	}
	return ""
}

func (x *ToolCallChunkEvent) GetParentMessageId() string {
	if x != nil && x.ParentMessageId != nil {
		return *x.ParentMessageId
	}
	return ""
}

func (x *ToolCallChunkEvent) GetDelta() string {
	if x != nil && x.Delta != nil {
		return *x.Delta
	}
	return ""
}

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*Event_TextMessageStart
	//	*Event_TextMessageContent
	//	*Event_TextMessageEnd
	//	*Event_ToolCallStart
	//	*Event_ToolCallArgs
	//	*Event_ToolCallEnd
	//	*Event_StateSnapshot
	//	*Event_StateDelta
	//	*Event_MessagesSnapshot
	//	*Event_Raw
	//	*Event_Custom
	//	*Event_RunStarted
	//	*Event_RunFinished
	//	*Event_RunError
	//	*Event_StepStarted
	//	*Event_StepFinished
	//	*Event_TextMessageChunk
	//	*Event_ToolCallChunk
	Event         isEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_events_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_events_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_events_proto_rawDescGZIP(), []int{19}
}

func (x *Event) GetEvent() isEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Event) GetTextMessageStart() *TextMessageStartEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_TextMessageStart); ok {
			return x.TextMessageStart
		}
	}
	return nil
}

func (x *Event) GetTextMessageContent() *TextMessageContentEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_TextMessageContent); ok {
			return x.TextMessageContent
		}
	}
	return nil
}

func (x *Event) GetTextMessageEnd() *TextMessageEndEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_TextMessageEnd); ok {
			return x.TextMessageEnd
		}
	}
	return nil
}

func (x *Event) GetToolCallStart() *ToolCallStartEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_ToolCallStart); ok {
			return x.ToolCallStart
		}
	}
	return nil
}

func (x *Event) GetToolCallArgs() *ToolCallArgsEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_ToolCallArgs); ok {
			return x.ToolCallArgs
		}
	}
	return nil
}

func (x *Event) GetToolCallEnd() *ToolCallEndEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_ToolCallEnd); ok {
			return x.ToolCallEnd
		}
	}
	return nil
}

func (x *Event) GetStateSnapshot() *StateSnapshotEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_StateSnapshot); ok {
			return x.StateSnapshot
		}
	}
	return nil
}

func (x *Event) GetStateDelta() *StateDeltaEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_StateDelta); ok {
			return x.StateDelta
		}
	}
	return nil
}

func (x *Event) GetMessagesSnapshot() *MessagesSnapshotEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_MessagesSnapshot); ok {
			return x.MessagesSnapshot
		}
	}
	return nil
}

func (x *Event) GetRaw() *RawEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_Raw); ok {
			return x.Raw
		}
	}
	return nil
}

func (x *Event) GetCustom() *CustomEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_Custom); ok {
			return x.Custom
		}
	}
	return nil
}

func (x *Event) GetRunStarted() *RunStartedEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_RunStarted); ok {
			return x.RunStarted
		}
	}
	return nil
}

func (x *Event) GetRunFinished() *RunFinishedEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_RunFinished); ok {
			return x.RunFinished
		}
	}
	return nil
}

func (x *Event) GetRunError() *RunErrorEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_RunError); ok {
			return x.RunError
		}
	}
	return nil
}

func (x *Event) GetStepStarted() *StepStartedEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_StepStarted); ok {
			return x.StepStarted
		}
	}
	return nil
}

func (x *Event) GetStepFinished() *StepFinishedEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_StepFinished); ok {
			return x.StepFinished
		}
	}
	return nil
}

func (x *Event) GetTextMessageChunk() *TextMessageChunkEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_TextMessageChunk); ok {
			return x.TextMessageChunk
		}
	}
	return nil
}

func (x *Event) GetToolCallChunk() *ToolCallChunkEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_ToolCallChunk); ok {
			return x.ToolCallChunk
		}
	}
	return nil
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_TextMessageStart struct {
	TextMessageStart *TextMessageStartEvent `protobuf:"bytes,1,opt,name=text_message_start,json=textMessageStart,proto3,oneof"`
}

type Event_TextMessageContent struct {
	TextMessageContent *TextMessageContentEvent `protobuf:"bytes,2,opt,name=text_message_content,json=textMessageContent,proto3,oneof"`
}

type Event_TextMessageEnd struct {
	TextMessageEnd *TextMessageEndEvent `protobuf:"bytes,3,opt,name=text_message_end,json=textMessageEnd,proto3,oneof"`
}

type Event_ToolCallStart struct {
	ToolCallStart *ToolCallStartEvent `protobuf:"bytes,4,opt,name=tool_call_start,json=toolCallStart,proto3,oneof"`
}

type Event_ToolCallArgs struct {
	ToolCallArgs *ToolCallArgsEvent `protobuf:"bytes,5,opt,name=tool_call_args,json=toolCallArgs,proto3,oneof"`
}

type Event_ToolCallEnd struct {
	ToolCallEnd *ToolCallEndEvent `protobuf:"bytes,6,opt,name=tool_call_end,json=toolCallEnd,proto3,oneof"`
}

type Event_StateSnapshot struct {
	StateSnapshot *StateSnapshotEvent `protobuf:"bytes,7,opt,name=state_snapshot,json=stateSnapshot,proto3,oneof"`
}

type Event_StateDelta struct {
	StateDelta *StateDeltaEvent `protobuf:"bytes,8,opt,name=state_delta,json=stateDelta,proto3,oneof"`
}

type Event_MessagesSnapshot struct {
	MessagesSnapshot *MessagesSnapshotEvent `protobuf:"bytes,9,opt,name=messages_snapshot,json=messagesSnapshot,proto3,oneof"`
}

type Event_Raw struct {
	Raw *RawEvent `protobuf:"bytes,10,opt,name=raw,proto3,oneof"`
}

type Event_Custom struct {
	Custom *CustomEvent `protobuf:"bytes,11,opt,name=custom,proto3,oneof"`
}

type Event_RunStarted struct {
	RunStarted *RunStartedEvent `protobuf:"bytes,12,opt,name=run_started,json=runStarted,proto3,oneof"`
}

type Event_RunFinished struct {
	RunFinished *RunFinishedEvent `protobuf:"bytes,13,opt,name=run_finished,json=runFinished,proto3,oneof"`
}

type Event_RunError struct {
	RunError *RunErrorEvent `protobuf:"bytes,14,opt,name=run_error,json=runError,proto3,oneof"`
}

type Event_StepStarted struct {
	StepStarted *StepStartedEvent `protobuf:"bytes,15,opt,name=step_started,json=stepStarted,proto3,oneof"`
}

type Event_StepFinished struct {
	StepFinished *StepFinishedEvent `protobuf:"bytes,16,opt,name=step_finished,json=stepFinished,proto3,oneof"`
}

type Event_TextMessageChunk struct {
	TextMessageChunk *TextMessageChunkEvent `protobuf:"bytes,17,opt,name=text_message_chunk,json=textMessageChunk,proto3,oneof"`
}

type Event_ToolCallChunk struct {
	ToolCallChunk *ToolCallChunkEvent `protobuf:"bytes,18,opt,name=tool_call_chunk,json=toolCallChunk,proto3,oneof"`
}

func (*Event_TextMessageStart) isEvent_Event() {}

func (*Event_TextMessageContent) isEvent_Event() {}

func (*Event_TextMessageEnd) isEvent_Event() {}

func (*Event_ToolCallStart) isEvent_Event() {}

func (*Event_ToolCallArgs) isEvent_Event() {}

func (*Event_ToolCallEnd) isEvent_Event() {}

func (*Event_StateSnapshot) isEvent_Event() {}

func (*Event_StateDelta) isEvent_Event() {}

func (*Event_MessagesSnapshot) isEvent_Event() {}

func (*Event_Raw) isEvent_Event() {}

func (*Event_Custom) isEvent_Event() {}

func (*Event_RunStarted) isEvent_Event() {}

func (*Event_RunFinished) isEvent_Event() {}

func (*Event_RunError) isEvent_Event() {}

func (*Event_StepStarted) isEvent_Event() {}

func (*Event_StepFinished) isEvent_Event() {}

func (*Event_TextMessageChunk) isEvent_Event() {}

func (*Event_ToolCallChunk) isEvent_Event() {}

var File_events_proto protoreflect.FileDescriptor

const file_events_proto_rawDesc = "" +
	"\n" +
	"\fevents.proto\x12\x05ag_ui\x1a\x1cgoogle/protobuf/struct.proto\x1a\vpatch.proto\x1a\vtypes.proto\"\xaa\x01\n" +
	"\tBaseEvent\x12$\n" +
	"\x04type\x18\x01 \x01(\x0e2\x10.ag_ui.EventTypeR\x04type\x12!\n" +
	"\ttimestamp\x18\x02 \x01(\x03H\x00R\ttimestamp\x88\x01\x01\x128\n" +
	"\traw_event\x18\x03 \x01(\v2\x16.google.protobuf.ValueH\x01R\brawEvent\x88\x01\x01B\f\n" +
	"\n" +
	"_timestampB\f\n" +
	"\n" +
	"_raw_event\"\x89\x01\n" +
	"\x15TextMessageStartEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x17\n" +
	"\x04role\x18\x03 \x01(\tH\x00R\x04role\x88\x01\x01B\a\n" +
	"\x05_role\"\x7f\n" +
	"\x17TextMessageContentEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x14\n" +
	"\x05delta\x18\x03 \x01(\tR\x05delta\"e\n" +
	"\x13TextMessageEndEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\"\xd4\x01\n" +
	"\x12ToolCallStartEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12 \n" +
	"\ftool_call_id\x18\x02 \x01(\tR\n" +
	"toolCallId\x12$\n" +
	"\x0etool_call_name\x18\x03 \x01(\tR\ftoolCallName\x12/\n" +
	"\x11parent_message_id\x18\x04 \x01(\tH\x00R\x0fparentMessageId\x88\x01\x01B\x14\n" +
	"\x12_parent_message_id\"|\n" +
	"\x11ToolCallArgsEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12 \n" +
	"\ftool_call_id\x18\x02 \x01(\tR\n" +
	"toolCallId\x12\x14\n" +
	"\x05delta\x18\x03 \x01(\tR\x05delta\"e\n" +
	"\x10ToolCallEndEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12 \n" +
	"\ftool_call_id\x18\x02 \x01(\tR\n" +
	"toolCallId\"y\n" +
	"\x12StateSnapshotEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x122\n" +
	"\bsnapshot\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\bsnapshot\"s\n" +
	"\x0fStateDeltaEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12/\n" +
	"\x05delta\x18\x02 \x03(\v2\x19.ag_ui.JsonPatchOperationR\x05delta\"t\n" +
	"\x15MessagesSnapshotEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12*\n" +
	"\bmessages\x18\x02 \x03(\v2\x0e.ag_ui.MessageR\bmessages\"\x91\x01\n" +
	"\bRawEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12,\n" +
	"\x05event\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05event\x12\x1b\n" +
	"\x06source\x18\x03 \x01(\tH\x00R\x06source\x88\x01\x01B\t\n" +
	"\a_source\"\x8f\x01\n" +
	"\vCustomEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x121\n" +
	"\x05value\x18\x03 \x01(\v2\x16.google.protobuf.ValueH\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\"v\n" +
	"\x0fRunStartedEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12\x1b\n" +
	"\tthread_id\x18\x02 \x01(\tR\bthreadId\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\"w\n" +
	"\x10RunFinishedEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12\x1b\n" +
	"\tthread_id\x18\x02 \x01(\tR\bthreadId\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\"|\n" +
	"\rRunErrorEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12\x17\n" +
	"\x04code\x18\x02 \x01(\tH\x00R\x04code\x88\x01\x01\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessageB\a\n" +
	"\x05_code\"`\n" +
	"\x10StepStartedEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12\x1b\n" +
	"\tstep_name\x18\x02 \x01(\tR\bstepName\"a\n" +
	"\x11StepFinishedEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12\x1b\n" +
	"\tstep_name\x18\x02 \x01(\tR\bstepName\"\xc2\x01\n" +
	"\x15TextMessageChunkEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12\"\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tH\x00R\tmessageId\x88\x01\x01\x12\x17\n" +
	"\x04role\x18\x03 \x01(\tH\x01R\x04role\x88\x01\x01\x12\x19\n" +
	"\x05delta\x18\x04 \x01(\tH\x02R\x05delta\x88\x01\x01B\r\n" +
	"\v_message_idB\a\n" +
	"\x05_roleB\b\n" +
	"\x06_delta\"\xa7\x02\n" +
	"\x12ToolCallChunkEvent\x12/\n" +
	"\n" +
	"base_event\x18\x01 \x01(\v2\x10.ag_ui.BaseEventR\tbaseEvent\x12%\n" +
	"\ftool_call_id\x18\x02 \x01(\tH\x00R\n" +
	"toolCallId\x88\x01\x01\x12)\n" +
	"\x0etool_call_name\x18\x03 \x01(\tH\x01R\ftoolCallName\x88\x01\x01\x12/\n" +
	"\x11parent_message_id\x18\x04 \x01(\tH\x02R\x0fparentMessageId\x88\x01\x01\x12\x19\n" +
	"\x05delta\x18\x05 \x01(\tH\x03R\x05delta\x88\x01\x01B\x0f\n" +
	"\r_tool_call_idB\x11\n" +
	"\x0f_tool_call_nameB\x14\n" +
	"\x12_parent_message_idB\b\n" +
	"\x06_delta\"\x9f\t\n" +
	"\x05Event\x12L\n" +
	"\x12text_message_start\x18\x01 \x01(\v2\x1c.ag_ui.TextMessageStartEventH\x00R\x10textMessageStart\x12R\n" +
	"\x14text_message_content\x18\x02 \x01(\v2\x1e.ag_ui.TextMessageContentEventH\x00R\x12textMessageContent\x12F\n" +
	"\x10text_message_end\x18\x03 \x01(\v2\x1a.ag_ui.TextMessageEndEventH\x00R\x0etextMessageEnd\x12C\n" +
	"\x0ftool_call_start\x18\x04 \x01(\v2\x19.ag_ui.ToolCallStartEventH\x00R\rtoolCallStart\x12@\n" +
	"\x0etool_call_args\x18\x05 \x01(\v2\x18.ag_ui.ToolCallArgsEventH\x00R\ftoolCallArgs\x12=\n" +
	"\rtool_call_end\x18\x06 \x01(\v2\x17.ag_ui.ToolCallEndEventH\x00R\vtoolCallEnd\x12B\n" +
	"\x0estate_snapshot\x18\a \x01(\v2\x19.ag_ui.StateSnapshotEventH\x00R\rstateSnapshot\x129\n" +
	"\vstate_delta\x18\b \x01(\v2\x16.ag_ui.StateDeltaEventH\x00R\n" +
	"stateDelta\x12K\n" +
	"\x11messages_snapshot\x18\t \x01(\v2\x1c.ag_ui.MessagesSnapshotEventH\x00R\x10messagesSnapshot\x12#\n" +
	"\x03raw\x18\n" +
	" \x01(\v2\x0f.ag_ui.RawEventH\x00R\x03raw\x12,\n" +
	"\x06custom\x18\v \x01(\v2\x12.ag_ui.CustomEventH\x00R\x06custom\x129\n" +
	"\vrun_started\x18\f \x01(\v2\x16.ag_ui.RunStartedEventH\x00R\n" +
	"runStarted\x12<\n" +
	"\frun_finished\x18\r \x01(\v2\x17.ag_ui.RunFinishedEventH\x00R\vrunFinished\x123\n" +
	"\trun_error\x18\x0e \x01(\v2\x14.ag_ui.RunErrorEventH\x00R\brunError\x12<\n" +
	"\fstep_started\x18\x0f \x01(\v2\x17.ag_ui.StepStartedEventH\x00R\vstepStarted\x12?\n" +
	"\rstep_finished\x18\x10 \x01(\v2\x18.ag_ui.StepFinishedEventH\x00R\fstepFinished\x12L\n" +
	"\x12text_message_chunk\x18\x11 \x01(\v2\x1c.ag_ui.TextMessageChunkEventH\x00R\x10textMessageChunk\x12C\n" +
	"\x0ftool_call_chunk\x18\x12 \x01(\v2\x19.ag_ui.ToolCallChunkEventH\x00R\rtoolCallChunkB\a\n" +
	"\x05event*\xb7\x02\n" +
	"\tEventType\x12\x16\n" +
	"\x12TEXT_MESSAGE_START\x10\x00\x12\x18\n" +
	"\x14TEXT_MESSAGE_CONTENT\x10\x01\x12\x14\n" +
	"\x10TEXT_MESSAGE_END\x10\x02\x12\x13\n" +
	"\x0fTOOL_CALL_START\x10\x03\x12\x12\n" +
	"\x0eTOOL_CALL_ARGS\x10\x04\x12\x11\n" +
	"\rTOOL_CALL_END\x10\x05\x12\x12\n" +
	"\x0eSTATE_SNAPSHOT\x10\x06\x12\x0f\n" +
	"\vSTATE_DELTA\x10\a\x12\x15\n" +
	"\x11MESSAGES_SNAPSHOT\x10\b\x12\a\n" +
	"\x03RAW\x10\t\x12\n" +
	"\n" +
	"\x06CUSTOM\x10\n" +
	"\x12\x0f\n" +
	"\vRUN_STARTED\x10\v\x12\x10\n" +
	"\fRUN_FINISHED\x10\f\x12\r\n" +
	"\tRUN_ERROR\x10\r\x12\x10\n" +
	"\fSTEP_STARTED\x10\x0e\x12\x11\n" +
	"\rSTEP_FINISHED\x10\x0fB-Z+github.com/mattsp1290/ag-ui/go-sdk/pkg/proto/generatedb\x06proto3"

var (
	file_events_proto_rawDescOnce sync.Once
	file_events_proto_rawDescData []byte
)

func file_events_proto_rawDescGZIP() []byte {
	file_events_proto_rawDescOnce.Do(func() {
		file_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_events_proto_rawDesc), len(file_events_proto_rawDesc)))
	})
	return file_events_proto_rawDescData
}

var file_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_events_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_events_proto_goTypes = []any{
	(EventType)(0),                  // 0: ag_ui.EventType
	(*BaseEvent)(nil),               // 1: ag_ui.BaseEvent
	(*TextMessageStartEvent)(nil),   // 2: ag_ui.TextMessageStartEvent
	(*TextMessageContentEvent)(nil), // 3: ag_ui.TextMessageContentEvent
	(*TextMessageEndEvent)(nil),     // 4: ag_ui.TextMessageEndEvent
	(*ToolCallStartEvent)(nil),      // 5: ag_ui.ToolCallStartEvent
	(*ToolCallArgsEvent)(nil),       // 6: ag_ui.ToolCallArgsEvent
	(*ToolCallEndEvent)(nil),        // 7: ag_ui.ToolCallEndEvent
	(*StateSnapshotEvent)(nil),      // 8: ag_ui.StateSnapshotEvent
	(*StateDeltaEvent)(nil),         // 9: ag_ui.StateDeltaEvent
	(*MessagesSnapshotEvent)(nil),   // 10: ag_ui.MessagesSnapshotEvent
	(*RawEvent)(nil),                // 11: ag_ui.RawEvent
	(*CustomEvent)(nil),             // 12: ag_ui.CustomEvent
	(*RunStartedEvent)(nil),         // 13: ag_ui.RunStartedEvent
	(*RunFinishedEvent)(nil),        // 14: ag_ui.RunFinishedEvent
	(*RunErrorEvent)(nil),           // 15: ag_ui.RunErrorEvent
	(*StepStartedEvent)(nil),        // 16: ag_ui.StepStartedEvent
	(*StepFinishedEvent)(nil),       // 17: ag_ui.StepFinishedEvent
	(*TextMessageChunkEvent)(nil),   // 18: ag_ui.TextMessageChunkEvent
	(*ToolCallChunkEvent)(nil),      // 19: ag_ui.ToolCallChunkEvent
	(*Event)(nil),                   // 20: ag_ui.Event
	(*structpb.Value)(nil),          // 21: google.protobuf.Value
	(*JsonPatchOperation)(nil),      // 22: ag_ui.JsonPatchOperation
	(*Message)(nil),                 // 23: ag_ui.Message
}
var file_events_proto_depIdxs = []int32{
	0,  // 0: ag_ui.BaseEvent.type:type_name -> ag_ui.EventType
	21, // 1: ag_ui.BaseEvent.raw_event:type_name -> google.protobuf.Value
	1,  // 2: ag_ui.TextMessageStartEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 3: ag_ui.TextMessageContentEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 4: ag_ui.TextMessageEndEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 5: ag_ui.ToolCallStartEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 6: ag_ui.ToolCallArgsEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 7: ag_ui.ToolCallEndEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 8: ag_ui.StateSnapshotEvent.base_event:type_name -> ag_ui.BaseEvent
	21, // 9: ag_ui.StateSnapshotEvent.snapshot:type_name -> google.protobuf.Value
	1,  // 10: ag_ui.StateDeltaEvent.base_event:type_name -> ag_ui.BaseEvent
	22, // 11: ag_ui.StateDeltaEvent.delta:type_name -> ag_ui.JsonPatchOperation
	1,  // 12: ag_ui.MessagesSnapshotEvent.base_event:type_name -> ag_ui.BaseEvent
	23, // 13: ag_ui.MessagesSnapshotEvent.messages:type_name -> ag_ui.Message
	1,  // 14: ag_ui.RawEvent.base_event:type_name -> ag_ui.BaseEvent
	21, // 15: ag_ui.RawEvent.event:type_name -> google.protobuf.Value
	1,  // 16: ag_ui.CustomEvent.base_event:type_name -> ag_ui.BaseEvent
	21, // 17: ag_ui.CustomEvent.value:type_name -> google.protobuf.Value
	1,  // 18: ag_ui.RunStartedEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 19: ag_ui.RunFinishedEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 20: ag_ui.RunErrorEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 21: ag_ui.StepStartedEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 22: ag_ui.StepFinishedEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 23: ag_ui.TextMessageChunkEvent.base_event:type_name -> ag_ui.BaseEvent
	1,  // 24: ag_ui.ToolCallChunkEvent.base_event:type_name -> ag_ui.BaseEvent
	2,  // 25: ag_ui.Event.text_message_start:type_name -> ag_ui.TextMessageStartEvent
	3,  // 26: ag_ui.Event.text_message_content:type_name -> ag_ui.TextMessageContentEvent
	4,  // 27: ag_ui.Event.text_message_end:type_name -> ag_ui.TextMessageEndEvent
	5,  // 28: ag_ui.Event.tool_call_start:type_name -> ag_ui.ToolCallStartEvent
	6,  // 29: ag_ui.Event.tool_call_args:type_name -> ag_ui.ToolCallArgsEvent
	7,  // 30: ag_ui.Event.tool_call_end:type_name -> ag_ui.ToolCallEndEvent
	8,  // 31: ag_ui.Event.state_snapshot:type_name -> ag_ui.StateSnapshotEvent
	9,  // 32: ag_ui.Event.state_delta:type_name -> ag_ui.StateDeltaEvent
	10, // 33: ag_ui.Event.messages_snapshot:type_name -> ag_ui.MessagesSnapshotEvent
	11, // 34: ag_ui.Event.raw:type_name -> ag_ui.RawEvent
	12, // 35: ag_ui.Event.custom:type_name -> ag_ui.CustomEvent
	13, // 36: ag_ui.Event.run_started:type_name -> ag_ui.RunStartedEvent
	14, // 37: ag_ui.Event.run_finished:type_name -> ag_ui.RunFinishedEvent
	15, // 38: ag_ui.Event.run_error:type_name -> ag_ui.RunErrorEvent
	16, // 39: ag_ui.Event.step_started:type_name -> ag_ui.StepStartedEvent
	17, // 40: ag_ui.Event.step_finished:type_name -> ag_ui.StepFinishedEvent
	18, // 41: ag_ui.Event.text_message_chunk:type_name -> ag_ui.TextMessageChunkEvent
	19, // 42: ag_ui.Event.tool_call_chunk:type_name -> ag_ui.ToolCallChunkEvent
	43, // [43:43] is the sub-list for method output_type
	43, // [43:43] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_events_proto_init() }
func file_events_proto_init() {
	if File_events_proto != nil {
		return
	}
	file_patch_proto_init()
	file_types_proto_init()
	file_events_proto_msgTypes[0].OneofWrappers = []any{}
	file_events_proto_msgTypes[1].OneofWrappers = []any{}
	file_events_proto_msgTypes[4].OneofWrappers = []any{}
	file_events_proto_msgTypes[10].OneofWrappers = []any{}
	file_events_proto_msgTypes[11].OneofWrappers = []any{}
	file_events_proto_msgTypes[14].OneofWrappers = []any{}
	file_events_proto_msgTypes[17].OneofWrappers = []any{}
	file_events_proto_msgTypes[18].OneofWrappers = []any{}
	file_events_proto_msgTypes[19].OneofWrappers = []any{
		(*Event_TextMessageStart)(nil),
		(*Event_TextMessageContent)(nil),
		(*Event_TextMessageEnd)(nil),
		(*Event_ToolCallStart)(nil),
		(*Event_ToolCallArgs)(nil),
		(*Event_ToolCallEnd)(nil),
		(*Event_StateSnapshot)(nil),
		(*Event_StateDelta)(nil),
		(*Event_MessagesSnapshot)(nil),
		(*Event_Raw)(nil),
		(*Event_Custom)(nil),
		(*Event_RunStarted)(nil),
		(*Event_RunFinished)(nil),
		(*Event_RunError)(nil),
		(*Event_StepStarted)(nil),
		(*Event_StepFinished)(nil),
		(*Event_TextMessageChunk)(nil),
		(*Event_ToolCallChunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_events_proto_rawDesc), len(file_events_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_events_proto_goTypes,
		DependencyIndexes: file_events_proto_depIdxs,
		EnumInfos:         file_events_proto_enumTypes,
		MessageInfos:      file_events_proto_msgTypes,
	}.Build()
	File_events_proto = out.File
	file_events_proto_goTypes = nil
	file_events_proto_depIdxs = nil
}
